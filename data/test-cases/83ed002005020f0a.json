{
  "uid" : "83ed002005020f0a",
  "name" : "test_tear_down",
  "fullName" : "basic_test#test_tear_down",
  "historyId" : "b779a260a1e2fa9cd36f6509dac5ddee",
  "time" : {
    "start" : 1663765800050,
    "stop" : 1663765805207,
    "duration" : 5157
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Authorized user info was not in the expected format, missing fields refresh_token.",
  "statusTrace" : "def test_tear_down():\n>       finish_test()\n\nbasic_test.py:281: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutills\\drivers.py:90: in finish_test\n    gdrive.upload_test_video(file_name=f\"{test_video_file_name}.mp4\")\nutills\\gdrive\\gdrive.py:52: in upload_test_video\n    drive = get_drive()\nutills\\gdrive\\gdrive.py:19: in get_drive\n    creds = Credentials.from_authorized_user_file('token.json', SCOPES)\nc:\\users\\user\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\google\\oauth2\\credentials.py:402: in from_authorized_user_file\n    return cls.from_authorized_user_info(data, scopes)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'google.oauth2.credentials.Credentials'>\ninfo = {'client_id': '220672782084-clb7dkjj724epcokcibt2u1ol2q7rgc3.apps.googleusercontent.com', 'client_secret': 'GOCSPX-dBs...YuQURyLfYd39wQZmrx', 'expiry': '2022-09-21T13:53:54.523006Z', 'scopes': ['https://www.googleapis.com/auth/drive'], ...}\nscopes = ['https://www.googleapis.com/auth/drive']\n\n    @classmethod\n    def from_authorized_user_info(cls, info, scopes=None):\n        \"\"\"Creates a Credentials instance from parsed authorized user info.\n    \n        Args:\n            info (Mapping[str, str]): The authorized user info in Google\n                format.\n            scopes (Sequence[str]): Optional list of scopes to include in the\n                credentials.\n    \n        Returns:\n            google.oauth2.credentials.Credentials: The constructed\n                credentials.\n    \n        Raises:\n            ValueError: If the info is not in the expected format.\n        \"\"\"\n        keys_needed = set((\"refresh_token\", \"client_id\", \"client_secret\"))\n        missing = keys_needed.difference(six.iterkeys(info))\n    \n        if missing:\n>           raise ValueError(\n                \"Authorized user info was not in the expected format, missing \"\n                \"fields {}.\".format(\", \".join(missing))\n            )\nE           ValueError: Authorized user info was not in the expected format, missing fields refresh_token.\n\nc:\\users\\user\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\google\\oauth2\\credentials.py:352: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Authorized user info was not in the expected format, missing fields refresh_token.",
    "statusTrace" : "def test_tear_down():\n>       finish_test()\n\nbasic_test.py:281: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutills\\drivers.py:90: in finish_test\n    gdrive.upload_test_video(file_name=f\"{test_video_file_name}.mp4\")\nutills\\gdrive\\gdrive.py:52: in upload_test_video\n    drive = get_drive()\nutills\\gdrive\\gdrive.py:19: in get_drive\n    creds = Credentials.from_authorized_user_file('token.json', SCOPES)\nc:\\users\\user\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\google\\oauth2\\credentials.py:402: in from_authorized_user_file\n    return cls.from_authorized_user_info(data, scopes)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'google.oauth2.credentials.Credentials'>\ninfo = {'client_id': '220672782084-clb7dkjj724epcokcibt2u1ol2q7rgc3.apps.googleusercontent.com', 'client_secret': 'GOCSPX-dBs...YuQURyLfYd39wQZmrx', 'expiry': '2022-09-21T13:53:54.523006Z', 'scopes': ['https://www.googleapis.com/auth/drive'], ...}\nscopes = ['https://www.googleapis.com/auth/drive']\n\n    @classmethod\n    def from_authorized_user_info(cls, info, scopes=None):\n        \"\"\"Creates a Credentials instance from parsed authorized user info.\n    \n        Args:\n            info (Mapping[str, str]): The authorized user info in Google\n                format.\n            scopes (Sequence[str]): Optional list of scopes to include in the\n                credentials.\n    \n        Returns:\n            google.oauth2.credentials.Credentials: The constructed\n                credentials.\n    \n        Raises:\n            ValueError: If the info is not in the expected format.\n        \"\"\"\n        keys_needed = set((\"refresh_token\", \"client_id\", \"client_secret\"))\n        missing = keys_needed.difference(six.iterkeys(info))\n    \n        if missing:\n>           raise ValueError(\n                \"Authorized user info was not in the expected format, missing \"\n                \"fields {}.\".format(\", \".join(missing))\n            )\nE           ValueError: Authorized user info was not in the expected format, missing fields refresh_token.\n\nc:\\users\\user\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\google\\oauth2\\credentials.py:352: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e59852a19613dabe",
      "name" : "stdout",
      "source" : "e59852a19613dabe.txt",
      "type" : "text/plain",
      "size" : 20
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "basic_test"
  }, {
    "name" : "host",
    "value" : "DESKTOP-S8ODV3K"
  }, {
    "name" : "thread",
    "value" : "45952-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "basic_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "83ed002005020f0a.json",
  "parameterValues" : [ ]
}